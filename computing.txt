ssh wstein@geom.math.washington.edu

------------
Use "screen"!


screen

screen -x

man screen


-----------
cd /mnt/SSD1/mrc

. set_path

Verify that you got it:

wstein@geom:/mnt/SSD1/mrc$ which sage
/mnt/SSD1/mrc/sage-5.1.beta6/sage

cd sage-5.1.beta6/devel/sage/sage/modular/hilbert/

Try it:

sage: from sage.modular.hilbert.sqrt5_hmf import F, QuaternionicModule
sage: H = QuaternionicModule(3 * F.prime_above(31))
sage: F.primes_above(11)               
[Fractional ideal (-3*a + 2), Fractional ideal (-3*a + 1)]
sage: H.hecke_matrix(F.primes_above(11)[1]).fcp()
(x - 12) * (x - 2)^2 * (x + 4)^3
sage: H = QuaternionicModule(F.prime_above(2)*F.prime_above(3)*F.primes_above(11)[0]^2)
sage: H                                                                                
Quaternionic module of dimension 110, level 60*a-18 (of norm 4356=2^2*3^2*11^2) over QQ(sqrt(5))

sage: H.hecke_matrix(F.primes_above(5)[0]).fcp()                                       
(x - 6) * (x - 4)^2 * x^2 * (x + 3)^4 * (x + 4)^4 * (x - 3)^6 * (x - 2)^7 * (x + 1)^8 * (x - 1)^10 * (x + 2)^10 * (x^2 - 3*x + 1) * (x^2 - x - 11) * (x^2 + x - 11) * (x^2 + 3*x + 1) * (x^2 - 4*x - 1)^2 * (x^2 - 2*x - 4)^2 * (x^2 - 2*x - 2)^2 * (x^2 + 2*x - 4)^2 * (x^2 + 2*x - 2)^2 * (x^2 + 4*x - 1)^2 * (x^2 - 12)^4 * (x^2 - 3)^4 * (x^4 - 2*x^3 - 11*x^2 + 22*x + 1) * (x^4 + 2*x^3 - 11*x^2 - 22*x + 1)


-----

Using GIT:

blastoff:mrc-2012 wstein$ git add computing.txt 
blastoff:mrc-2012 wstein$ git commit -a -v
[master 917de45] Add a file about how to compute stuff.
 1 file changed, 28 insertions(+)
 create mode 100644 computing.txt
blastoff:mrc-2012 wstein$ git pull
remote: Counting objects: 8, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 6 (delta 4), reused 4 (delta 2)
Unpacking objects: 100% (6/6), done.
From github.com:williamstein/mrc-2012
   0956e00..27baf09  master     -> origin/master
Merge made by the 'recursive' strategy.
 README.md |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)
blastoff:mrc-2012 wstein$ git push

ETc. 


-------------


sage: from sage.lfunctions.eulerprod import LSeries
sage: from sage.modular.hilbert.sqrt5_hmf import F, QuaternionicModule
sage: L = LSeries(EllipticCurve('163a').change_ring(F))

--

sage:  from sage.modular.hilbert.sqrt5_hmf import F, QuaternionicModule
sage: from psage.lseries.eulerprod import LSeries
sage: L = LSeries(EllipticCurve('11a').change_ring(F))
sage: L.number_of_coefficients(53)
1069
sage: L.number_of_coefficients(20)
259

sage: L = LSeries(EllipticCurve('163a').change_ring(F))
sage: L.number_of_coefficients(53)
16702
sage: L.number_of_coefficients(10)
2283
sage: L.taylor_series(1, 5)
0.000000000000000 + (5.66602878285977e-20)*z + 0.000000000000000*z^2 + 3.82046485133121*z^3 - 7.15574079314048*z^4 + O(z^5)
sage: L.taylor_series(1, 5, prec=10)
0.00 + (6.7e-9)*z + (-1.3e-8)*z^2 + 3.8*z^3 - 7.2*z^4 + O(z^5)
sage: L.taylor_series(1, 5, prec=20)
0.00000 + (3.2513e-11)*z + (-6.0897e-11)*z^2 + 3.8205*z^3 - 7.1557*z^4 + O(z^5)


-------------------------------------------------------------------

